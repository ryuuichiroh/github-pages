name: Convert Asciidoc to HTML and Deploy

on:
  push:
    branches: [main]
    paths: ["docs/**/*"]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Asciidoctor
        run: |
          sudo apt-get update
          sudo apt-get install -y asciidoctor

      - name: AsciiDoc to HTML conversion
        run: |
          # adocファイルが存在する場合のみ変換を実行
          if ls docs/**/*.adoc 1> /dev/null 2>&1; then
            for file in docs/**/*.adoc; do
              # ディレクトリ構造を保持したまま .adoc を .html に変更
              htmlfile="${file%.adoc}.html"
              echo "Converting $file to $htmlfile"
              asciidoctor -o "$htmlfile" "$file"
            done
          else
            echo "No .adoc files found to convert"
          fi

      - name: Add Mermaid support
        run: |
          # HTMLファイルにMermaidサポートを追加
          for htmlfile in docs/**/*.html; do
            if [ -f "$htmlfile" ]; then
              echo "Adding Mermaid support to $htmlfile"
              # Mermaidサポートスクリプトファイルの内容を</head>タグの直前に挿入
              if [ -f ".github/scripts/mermaid-support.html" ]; then
                # 一時ファイルを作成して、正しい順序で挿入
                temp_file=$(mktemp)
                # </head>より前の部分をコピー
                sed '/<\/head>/,$d' "$htmlfile" > "$temp_file"
                # コメントを追加
                echo "<!-- Mermaid Support -->" >> "$temp_file"
                # Mermaidスクリプトを追加
                cat .github/scripts/mermaid-support.html >> "$temp_file"
                # </head>以降の部分を追加
                sed -n '/<\/head>/,$p' "$htmlfile" >> "$temp_file"
                # 元ファイルを置き換え
                mv "$temp_file" "$htmlfile"
                echo "Mermaid support added to $htmlfile"
              else
                echo "Mermaid support script not found"
              fi
            fi
          done

      - name: List files to be deployed
        run: |
          echo "Files that will be deployed to GitHub Pages:"
          find docs -type f | sort

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3.0.1
        with:
          path: docs

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
